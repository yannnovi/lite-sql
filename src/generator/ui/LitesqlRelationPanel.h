#ifndef __LitesqlRelationPanel__
#define __LitesqlRelationPanel__

/**
@file
Subclass of RelationPanel, which is generated by wxFormBuilder.
*/
#include <vector>
#include <wx/valgen.h>

#include "ui.h"
#include "xmlobjects.hpp"

/**Validator for a wxChoice <-> xml::Field::type */
class RelateTypeValidator : public wxGenericValidator {

  DECLARE_DYNAMIC_CLASS(RelateTypeValidator)

public:
  
  RelateTypeValidator (xml::Relate::Ptr val = xml::Relate::Ptr(NULL));
  RelateTypeValidator (const RelateTypeValidator& val);

  virtual wxObject *Clone() const;
    
  // Called to transfer data to the window
  virtual bool TransferToWindow();

    // Called to transfer data from the window
  virtual bool TransferFromWindow();

private:
  xml::Relate::Ptr m_pRelate;
  wxString value; 
};

class RelateLimitValidator : public wxGenericValidator {

  DECLARE_DYNAMIC_CLASS(RelateLimitValidator)

public:
  
  RelateLimitValidator(xml::Relate::Ptr val = xml::Relate::Ptr(NULL));
  RelateLimitValidator(const RelateLimitValidator& val);

  virtual wxObject *Clone() const;
    
  // Called to transfer data to the window
  virtual bool TransferToWindow();

    // Called to transfer data from the window
  virtual bool TransferFromWindow();

private:
  xml::Relate::Ptr m_pRelate;
  wxString value; 
};

/** Implementing RelationPanel */
class LitesqlRelationPanel : public ui::RelationPanel
{
public:
  /** Constructor */
  LitesqlRelationPanel( wxWindow* parent , xml::Relation::Ptr& pRelation);

private:
  xml::Relation::Ptr m_pRelation;
};

/** Implementing RelatePanel */
class LitesqlRelatePanel : public ui::RelatePanel
{
public:
  /** Constructor */
  LitesqlRelatePanel( wxWindow* parent , xml::Relate::Ptr& pRelate);
  void setBaseClasses(const xml::ObjectSequence& baseClasses);

private:
  xml::Relate::Ptr m_pRelate;
};

#endif // __LitesqlRelationPanel__
